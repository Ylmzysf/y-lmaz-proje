<!DOCTYPE html>
<html>
<head>
    <title>Günlük İstatistikler</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .stat-title {
            font-size: 16px;
            color: #666;
            margin-bottom: 10px;
        }

        .stat-value {
            font-size: 24px;
            font-weight: bold;
            color: #333;
        }

        .chart-container {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            height: 400px;
            position: relative;
        }

        .chart-title {
            font-size: 18px;
            color: #333;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <%- include('sidebar') %>

    <div class="main-container">
        <div class="content">
            <div class="stats-container">
                <div class="stat-card">
                    <div class="stat-title">Bekleyen Siparişler</div>
                    <div class="stat-value" id="bekleyenSiparis">0</div>
                </div>
                <div class="stat-card">
                    <div class="stat-title">Günlük Toplam Sipariş</div>
                    <div class="stat-value" id="toplamSiparis">0</div>
                </div>
                <div class="stat-card">
                    <div class="stat-title">Günlük Ciro</div>
                    <div class="stat-value" id="gunlukCiro">0 ₺</div>
                </div>
            </div>

            <div class="chart-container">
                <div class="chart-title">Son 7 Günün Finansal Analizi</div>
                <canvas id="haftalikAnalizChart"></canvas>
            </div>
        </div>
    </div>

    <script>
        document.querySelector('.toggle-btn').addEventListener('click', function() {
            document.querySelector('.sidebar').classList.toggle('active');
        });

        let haftalikGrafik = null;

        async function istatistikleriGoster() {
            try {
                console.log('İstatistikler yükleniyor...');
                const response = await fetch('/api/gunluk-istatistikler');
                const data = await response.json();
                console.log('Gelen veri:', data);
                
                if (data.success) {
                    const paraBirimi = new Intl.NumberFormat('tr-TR', {
                        style: 'currency',
                        currency: 'TRY'
                    });

                    document.getElementById('bekleyenSiparis').textContent = 
                        data.bekleyen_siparisler.toLocaleString('tr-TR');
                    
                    document.getElementById('toplamSiparis').textContent = 
                        data.toplam_siparis.toLocaleString('tr-TR');
                    
                    document.getElementById('gunlukCiro').textContent = 
                        paraBirimi.format(data.gunluk_ciro);

                    console.log('İstatistikler güncellendi');
                }
            } catch (error) {
                console.error('İstatistik yükleme hatası:', error);
            }
        }

        async function haftalikAnaliziGoster() {
            try {
                if (haftalikGrafik) {
                    haftalikGrafik.destroy();
                }

                const response = await fetch('/api/haftalik-analiz');
                const data = await response.json();
                
                if (data.success && data.haftalik_analiz) {
                    const ctx = document.getElementById('haftalikAnalizChart');
                    
                    haftalikGrafik = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: data.haftalik_analiz.map(item => {
                                const tarih = new Date(item.tarih);
                                return tarih.toLocaleDateString('tr-TR', { weekday: 'short', day: 'numeric' });
                            }),
                            datasets: [
                                {
                                    label: 'Gelir',
                                    data: data.haftalik_analiz.map(item => item.gelir),
                                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                                    borderColor: 'rgba(75, 192, 192, 1)',
                                    borderWidth: 1
                                },
                                {
                                    label: 'Gider',
                                    data: data.haftalik_analiz.map(item => item.gider),
                                    backgroundColor: 'rgba(255, 99, 132, 0.5)',
                                    borderColor: 'rgba(255, 99, 132, 1)',
                                    borderWidth: 1
                                },
                                {
                                    label: 'Kar',
                                    data: data.haftalik_analiz.map(item => item.kar),
                                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                    borderColor: 'rgba(54, 162, 235, 1)',
                                    borderWidth: 1
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: function(value) {
                                            return value.toLocaleString('tr-TR', {
                                                style: 'currency',
                                                currency: 'TRY'
                                            });
                                        }
                                    }
                                }
                            },
                            plugins: {
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            return context.dataset.label + ': ' + 
                                                context.raw.toLocaleString('tr-TR', {
                                                    style: 'currency',
                                                    currency: 'TRY'
                                                });
                                        }
                                    }
                                }
                            }
                        }
                    });
                }
            } catch (error) {
                console.error('Grafik oluşturma hatası:', error);
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            istatistikleriGoster();
            haftalikAnaliziGoster();
        });

        setInterval(() => {
            istatistikleriGoster();
            haftalikAnaliziGoster();
        }, 30000);
    </script>
</body>
</html>
